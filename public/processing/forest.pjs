float timer,delta;

class Tree{
	public float x,y,dy,top,maxTop,trunk,leafshadow,z;
	Tree(float newX,float newY,float newDy,float newZ){
		z = newZ;
		x = newX;;
		top = y = newY - z;
		dy = newDy + ((float)random(9))/100.0;
		maxTop = y - random(200) - 50;
		trunk = random(9)+2;
		leafshadow = random(10);
	}

	void draw(float d){
		strokeWeight(1);
		stroke(51+z,51+z,51+z);
		if(top > maxTop)
			top -= (dy)*d;
		else{
			fill(51+z,51+z,51+z);
			triangle(x-32,top-((top-y)*0.8),x,top-34,x+32,top-((top-y)*0.8));
			fill(12+z,12+z,12+z);
			triangle(x+20-leafshadow,top-((top-y)*0.8),x,top-34,x+32,top-((top-y)*0.8));
		}
		strokeWeight(trunk);
		line(x,y,x,top);
	}
}

Tree trees[];

void setup(){
	size(1500,500);
	background(255);
	frameRate(30);

	trees = new Tree[20];
	for(int i=0;i < trees.length; i++){
		if(i < 10)
			z = 21;
		else
			z = 0;
		trees[i] = new Tree(random(1500-450)+400,400,0.04,z);
	}
	smooth();
	timer = millis();
}

void draw(){
	delta = millis() - timer;
	timer = millis();

	background(255);

	for(int i=0;i < trees.length; i++){
		trees[i].draw(delta);
	}
}
